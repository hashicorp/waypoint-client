// Code generated by go-swagger; DO NOT EDIT.

package github_control_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/waypoint-client/gen/models"
)

// GithubControlServiceLoginReader is a Reader for the GithubControlServiceLogin structure.
type GithubControlServiceLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GithubControlServiceLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGithubControlServiceLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGithubControlServiceLoginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGithubControlServiceLoginOK creates a GithubControlServiceLoginOK with default headers values
func NewGithubControlServiceLoginOK() *GithubControlServiceLoginOK {
	return &GithubControlServiceLoginOK{}
}

/*GithubControlServiceLoginOK handles this case with default header values.

A successful response.
*/
type GithubControlServiceLoginOK struct {
	Payload *models.HashicorpCloudWaypointLoginResponse
}

func (o *GithubControlServiceLoginOK) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-04-21/github/login][%d] githubControlServiceLoginOK  %+v", 200, o.Payload)
}

func (o *GithubControlServiceLoginOK) GetPayload() *models.HashicorpCloudWaypointLoginResponse {
	return o.Payload
}

func (o *GithubControlServiceLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HashicorpCloudWaypointLoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGithubControlServiceLoginDefault creates a GithubControlServiceLoginDefault with default headers values
func NewGithubControlServiceLoginDefault(code int) *GithubControlServiceLoginDefault {
	return &GithubControlServiceLoginDefault{
		_statusCode: code,
	}
}

/*GithubControlServiceLoginDefault handles this case with default header values.

An unexpected error response.
*/
type GithubControlServiceLoginDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the github control service login default response
func (o *GithubControlServiceLoginDefault) Code() int {
	return o._statusCode
}

func (o *GithubControlServiceLoginDefault) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-04-21/github/login][%d] GithubControlService_Login default  %+v", o._statusCode, o.Payload)
}

func (o *GithubControlServiceLoginDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *GithubControlServiceLoginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
