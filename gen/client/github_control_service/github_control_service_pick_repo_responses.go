// Code generated by go-swagger; DO NOT EDIT.

package github_control_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/waypoint-client/gen/models"
)

// GithubControlServicePickRepoReader is a Reader for the GithubControlServicePickRepo structure.
type GithubControlServicePickRepoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GithubControlServicePickRepoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGithubControlServicePickRepoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGithubControlServicePickRepoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGithubControlServicePickRepoOK creates a GithubControlServicePickRepoOK with default headers values
func NewGithubControlServicePickRepoOK() *GithubControlServicePickRepoOK {
	return &GithubControlServicePickRepoOK{}
}

/*GithubControlServicePickRepoOK handles this case with default header values.

A successful response.
*/
type GithubControlServicePickRepoOK struct {
	Payload *models.HashicorpCloudWaypointPickRepoResponse
}

func (o *GithubControlServicePickRepoOK) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-04-21/github/pick/repo][%d] githubControlServicePickRepoOK  %+v", 200, o.Payload)
}

func (o *GithubControlServicePickRepoOK) GetPayload() *models.HashicorpCloudWaypointPickRepoResponse {
	return o.Payload
}

func (o *GithubControlServicePickRepoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HashicorpCloudWaypointPickRepoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGithubControlServicePickRepoDefault creates a GithubControlServicePickRepoDefault with default headers values
func NewGithubControlServicePickRepoDefault(code int) *GithubControlServicePickRepoDefault {
	return &GithubControlServicePickRepoDefault{
		_statusCode: code,
	}
}

/*GithubControlServicePickRepoDefault handles this case with default header values.

An unexpected error response.
*/
type GithubControlServicePickRepoDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the github control service pick repo default response
func (o *GithubControlServicePickRepoDefault) Code() int {
	return o._statusCode
}

func (o *GithubControlServicePickRepoDefault) Error() string {
	return fmt.Sprintf("[GET /waypoint/2022-04-21/github/pick/repo][%d] GithubControlService_PickRepo default  %+v", o._statusCode, o.Payload)
}

func (o *GithubControlServicePickRepoDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *GithubControlServicePickRepoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
