// Code generated by go-swagger; DO NOT EDIT.

package github_control_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGithubControlServicePickInstallationParams creates a new GithubControlServicePickInstallationParams object
// with the default values initialized.
func NewGithubControlServicePickInstallationParams() *GithubControlServicePickInstallationParams {
	var ()
	return &GithubControlServicePickInstallationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGithubControlServicePickInstallationParamsWithTimeout creates a new GithubControlServicePickInstallationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGithubControlServicePickInstallationParamsWithTimeout(timeout time.Duration) *GithubControlServicePickInstallationParams {
	var ()
	return &GithubControlServicePickInstallationParams{

		timeout: timeout,
	}
}

// NewGithubControlServicePickInstallationParamsWithContext creates a new GithubControlServicePickInstallationParams object
// with the default values initialized, and the ability to set a context for a request
func NewGithubControlServicePickInstallationParamsWithContext(ctx context.Context) *GithubControlServicePickInstallationParams {
	var ()
	return &GithubControlServicePickInstallationParams{

		Context: ctx,
	}
}

// NewGithubControlServicePickInstallationParamsWithHTTPClient creates a new GithubControlServicePickInstallationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGithubControlServicePickInstallationParamsWithHTTPClient(client *http.Client) *GithubControlServicePickInstallationParams {
	var ()
	return &GithubControlServicePickInstallationParams{
		HTTPClient: client,
	}
}

/*GithubControlServicePickInstallationParams contains all the parameters to send to the API endpoint
for the github control service pick installation operation typically these are written to a http.Request
*/
type GithubControlServicePickInstallationParams struct {

	/*SessionID*/
	SessionID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) WithTimeout(timeout time.Duration) *GithubControlServicePickInstallationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) WithContext(ctx context.Context) *GithubControlServicePickInstallationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) WithHTTPClient(client *http.Client) *GithubControlServicePickInstallationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSessionID adds the sessionID to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) WithSessionID(sessionID *string) *GithubControlServicePickInstallationParams {
	o.SetSessionID(sessionID)
	return o
}

// SetSessionID adds the sessionId to the github control service pick installation params
func (o *GithubControlServicePickInstallationParams) SetSessionID(sessionID *string) {
	o.SessionID = sessionID
}

// WriteToRequest writes these params to a swagger request
func (o *GithubControlServicePickInstallationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SessionID != nil {

		// query param session_id
		var qrSessionID string
		if o.SessionID != nil {
			qrSessionID = *o.SessionID
		}
		qSessionID := qrSessionID
		if qSessionID != "" {
			if err := r.SetQueryParam("session_id", qSessionID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
