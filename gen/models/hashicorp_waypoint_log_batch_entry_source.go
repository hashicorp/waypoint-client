// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashicorpWaypointLogBatchEntrySource  - APP: App is zero for backwards compatibility since Source was
// added later this allows the default to just work.
//  - ENTRYPOINT: Entrypoint logs.
//
// swagger:model hashicorp.waypoint.LogBatch.Entry.Source
type HashicorpWaypointLogBatchEntrySource string

const (

	// HashicorpWaypointLogBatchEntrySourceAPP captures enum value "APP"
	HashicorpWaypointLogBatchEntrySourceAPP HashicorpWaypointLogBatchEntrySource = "APP"

	// HashicorpWaypointLogBatchEntrySourceENTRYPOINT captures enum value "ENTRYPOINT"
	HashicorpWaypointLogBatchEntrySourceENTRYPOINT HashicorpWaypointLogBatchEntrySource = "ENTRYPOINT"
)

// for schema
var hashicorpWaypointLogBatchEntrySourceEnum []interface{}

func init() {
	var res []HashicorpWaypointLogBatchEntrySource
	if err := json.Unmarshal([]byte(`["APP","ENTRYPOINT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashicorpWaypointLogBatchEntrySourceEnum = append(hashicorpWaypointLogBatchEntrySourceEnum, v)
	}
}

func (m HashicorpWaypointLogBatchEntrySource) validateHashicorpWaypointLogBatchEntrySourceEnum(path, location string, value HashicorpWaypointLogBatchEntrySource) error {
	if err := validate.EnumCase(path, location, value, hashicorpWaypointLogBatchEntrySourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hashicorp waypoint log batch entry source
func (m HashicorpWaypointLogBatchEntrySource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashicorpWaypointLogBatchEntrySourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
