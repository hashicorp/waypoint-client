// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpWaypointVariableHclRange hashicorp waypoint variable hcl range
//
// swagger:model hashicorp.waypoint.Variable.HclRange
type HashicorpWaypointVariableHclRange struct {

	// end
	End *HashicorpWaypointVariableHclPos `json:"end,omitempty"`

	// filename
	Filename string `json:"filename,omitempty"`

	// start
	Start *HashicorpWaypointVariableHclPos `json:"start,omitempty"`
}

// Validate validates this hashicorp waypoint variable hcl range
func (m *HashicorpWaypointVariableHclRange) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HashicorpWaypointVariableHclRange) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.End) { // not required
		return nil
	}

	if m.End != nil {
		if err := m.End.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("end")
			}
			return err
		}
	}

	return nil
}

func (m *HashicorpWaypointVariableHclRange) validateStart(formats strfmt.Registry) error {

	if swag.IsZero(m.Start) { // not required
		return nil
	}

	if m.Start != nil {
		if err := m.Start.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("start")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpWaypointVariableHclRange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpWaypointVariableHclRange) UnmarshalBinary(b []byte) error {
	var res HashicorpWaypointVariableHclRange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
